// Code generated by "stringer -type DamageType -trimprefix DamageType"; DO NOT EDIT.

package combat

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DamageTypeNone-0]
	_ = x[DamageTypeStab-1]
	_ = x[DamageTypeSlash-2]
	_ = x[DamageTypeCrush-4]
	_ = x[DamageTypeMagic-8]
	_ = x[DamageTypeRanged-16]
	_ = x[DamageTypePoison-32]
	_ = x[DamageTypeAir-64]
	_ = x[DamageTypeWater-128]
	_ = x[DamageTypeEarth-256]
	_ = x[DamageTypeFire-512]
	_ = x[DamageTypeDragonfire-1024]
}

const (
	_DamageType_name_0 = "NoneStabSlash"
	_DamageType_name_1 = "Crush"
	_DamageType_name_2 = "Magic"
	_DamageType_name_3 = "Ranged"
	_DamageType_name_4 = "Poison"
	_DamageType_name_5 = "Air"
	_DamageType_name_6 = "Water"
	_DamageType_name_7 = "Earth"
	_DamageType_name_8 = "Fire"
	_DamageType_name_9 = "Dragonfire"
)

var (
	_DamageType_index_0 = [...]uint8{0, 4, 8, 13}
)

func (i DamageType) String() string {
	switch {
	case i <= 2:
		return _DamageType_name_0[_DamageType_index_0[i]:_DamageType_index_0[i+1]]
	case i == 4:
		return _DamageType_name_1
	case i == 8:
		return _DamageType_name_2
	case i == 16:
		return _DamageType_name_3
	case i == 32:
		return _DamageType_name_4
	case i == 64:
		return _DamageType_name_5
	case i == 128:
		return _DamageType_name_6
	case i == 256:
		return _DamageType_name_7
	case i == 512:
		return _DamageType_name_8
	case i == 1024:
		return _DamageType_name_9
	default:
		return "DamageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
